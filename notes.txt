 //https://codeshack.io/basic-login-system-nodejs-express-mysql/
 //https://techsolutionstuff.com/post/how-to-file-upload-using-node-js
 //https://techsolutionstuff.com/post/how-to-import-csv-file-in-mysql-using-node-js
 //https://techsolutionstuff.com/post/node-js-express-crud-example-with-mysql
 //https://codeshack.io/basic-login-system-nodejs-express-mysql/
 //https://ejs.co/#docs
//https://www.tutorialspoint.com/how-to-create-a-responsive-admin-dashboard-using-html-css-amp-javascript
//https://www.w3schools.com/howto/howto_js_dropdown_sidenav.asp
 //https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_sidenav_dropdown
https://www.w3schools.com/asp/asp_ajax_database.asp


 <% console.log('Items:', item.label); %>

 // display add user page
router.get('/add',async function(req, res, next) {   
    const menuItems = await getMenuItems();  
    // render to add.ejs
    dbConn.query('SELECT * FROM mice_tbl_menu_items', function (err, rows) {
        if (err) {
            req.flash('error', err);
            res.render('settings/add_menuItem', {
                label: '',
                link:'',
                data:'' ,
                title: 'Add menu',menuItems
            })
        } else{
            res.render('settings/add_menuItem', {
                label: '',
                link:'',
                data:rows ,
                title: 'Add menu',menuItems
            })
        }
    })
    
})



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title><%= title %></title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style_dashboard.css">
</head>


<body class="container" style="margin-top: 0px;margin-left: 0px;">
  <header>
    <!-- Header content goes here -->
  </header>
  <aside>
    <button id="sidebar-toggle">||||</button>
    <nav>
        <ul>
            <% function generateMenu(items, parentId) { %>
                <% items.forEach(item => { %>
                 
                    <% if (item.parent_id === parentId) { %>
                        <li>
                            <a href="<%= item.link %>"><%= item.label %></a>
                            <ul>
                                <% generateMenu(items, item.id) %>
                            </ul>
                        </li>
                    <% } %>
                <% }); %>
            <% } %>
            <% generateMenu(menuItems, 0); %>
           
        </ul>
    </nav>
</aside>
  <!-- This is where your specific page content will be inserted -->
  <footer>
    <!-- Footer content goes here -->
  </footer>
  <script>
   function toggleSidebar() {
        const sidebar = document.querySelector('aside');
        sidebar.classList.toggle('collapsed');
    }

    // Function to generate the menu structure
    function generateMenu(items, parentId) {
        items.forEach(item => {
            if (item.parent_id === parentId) {
                const menuItem = document.createElement('li');
                const link = document.createElement('a');
                link.href = item.link;
                link.textContent = item.label;

                if (hasSubmenu(items, item.id)) {
                    // If the item has a submenu, recursively render it
                    const submenu = document.createElement('ul');
                    submenu.appendChild(link);
                    menuItem.appendChild(submenu);
                    generateMenu(items, item.id, submenu);
                } else {
                    // If it doesn't have a submenu, add the link directly
                    menuItem.appendChild(link);
                }

                // Append the menu item to the parent menu or root menu
                document.getElementById('menu').appendChild(menuItem);
            }
        });
    }

    // Function to check if an item has a submenu
    function hasSubmenu(items, itemId) {
        return items.some(item => item.parent_id === itemId);
    }

  </script>
</body>
</html>

--------------------------------------

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>
    <%= title %>
  </title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style_dashboard.css">
</head>


<body class="container" style="margin-top: 0px;margin-left: 0px;">
  <header>
    <!-- Header content goes here -->
  </header>
  <aside>
    <button id="sidebar-toggle">||||</button>
    <nav>
      <ul id="menu">
        <% generateMenu(menuItems, 0); %>
      </ul>
    </nav>
  </aside>
  <!-- This is where your specific page content will be inserted -->
  <footer>
    <!-- Footer content goes here -->
  </footer>
  <script>
    // Function to generate the menu structure
    function generateMenu(items, parentId) {
      items.forEach(item => {
        if (item.parent_id === parentId) {
          const menuItem = document.createElement('li');
          const link = document.createElement('a');
          link.href = item.link;
          link.textContent = item.label;

          if (hasSubmenu(items, item.id)) {
            // If the item has a submenu, recursively render it
            const submenu = document.createElement('ul');
            submenu.appendChild(link);
            menuItem.appendChild(submenu);
            generateMenu(items, item.id, submenu);
          } else {
            // If it doesn't have a submenu, add the link directly
            menuItem.appendChild(link);
          }

          // Append the menu item to the parent menu or root menu
          document.getElementById('menu').appendChild(menuItem);
        }
      });
    }

    // Function to check if an item has a submenu
    function hasSubmenu(items, itemId) {
      return items.some(item => item.parent_id === itemId);
    }

    function toggleSidebar() {
      const sidebar = document.querySelector('aside');
      sidebar.classList.toggle('collapsed');
    }

  </script>
</body>

</html>
========

app.get('/api/submenu/:parentId', async (req, res) => {
  const parentId = req.params.parentId;

  try {
    if (!parentId) {
      return res.status(404).send('Resource not found');
    }

    // Fetch submenu items for the specified parentId
    const submenuItemsResult = await submenuItems(parentId);

    // Send the submenu items as JSON response
    res.json(submenuItemsResult);
  } catch (error) {
    console.error('Error fetching submenu items:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

const submenuItems = (parent_id) => {
  return new Promise((resolve, reject) => {
    const query = 'SELECT * FROM mice_tbl_menu_items WHERE parent_id = ' + parent_id;
    connection.query(query, (err, results) => {
      if (err) {
        reject(err);
      } else {
        resolve(results);
      }
    });
  });
};

----------------------

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>
    <%= title %>
  </title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style_dashboard.css">
</head>


<body class="container" style="margin-top: 0px;margin-left: 0px;">
  <header>
    <!-- Header content goes here -->
  </header>
  <aside>
    <button id="sidebar-toggle">||||</button>
    <nav>
      <!-- Update your EJS template to include placeholders for submenus -->
      <ul>
        <% function generateMenu(items, parentId) { %>
          <% items.forEach(item=> { %>

            <% if (item.parent_id===parentId) { %>
              <li class="dropdown-btn">
                <a href="<%= item.link %>">
                  <%= item.label %>
                </a>
                <ul>
                  <% generateMenu(items, item.id) %>
                </ul>
              </li>
              <% } %>
                <% }); %>
                  <% } %>
                    <% generateMenu(menuItems, 0); %>

      </ul>

    </nav>
  </aside>
  <!-- This is where your specific page content will be inserted -->
  <footer>
    <!-- Footer content goes here -->
  </footer>
  <script>
    // In your client-side JavaScript
    document.addEventListener('DOMContentLoaded', () => {
      const menuItemsWithSubmenu = document.querySelectorAll('.menu-item-has-submenu');

      menuItemsWithSubmenu.forEach(menuItem => {
        menuItem.addEventListener('click', async () => {
          const parentId = menuItem.dataset.parentId; // Get the parent ID from the HTML element

          try {
            const response = await fetch(`/api/submenu/${parentId}`);
            const submenuItems = await response.json();

            // Handle submenuItems (e.g., render them dynamically)
          } catch (error) {
            console.error('Error fetching submenu:', error);
          }
        });
      });
    });

    var dropdown = document.getElementsByClassName("dropdown-btn");
    var i;

    for (i = 0; i < dropdown.length; i++) {
      dropdown[i].addEventListener("click", function () {
        this.classList.toggle("active");
        var dropdownContent = this.nextElementSibling;
        if (dropdownContent.style.display === "block") {
          dropdownContent.style.display = "none";
        } else {
          dropdownContent.style.display = "block";
        }
      });
    }


    function toggleSidebar() {
      const sidebar = document.querySelector('aside');
      sidebar.classList.toggle('collapsed');
    }

  </script>
</body>

</html>

--------------------------------
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,minimum-scale=1">
    <title>Register</title>
    <!-- the form awesome library is used to add icons to our form -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <!-- include the stylesheet file -->
    <link href="/css/style.css" rel="stylesheet" type="text/css">
</head>

<body>
    <div class="register">
        <h1>Register</h1>

        <form action="reg" method="post">
            <div class="form-group">
                <input type="text" name="firstName" placeholder="First Name" id="firstName" required>
            </div>
            <div class="form-group">
                <input type="text" name="middleName" placeholder="Middle Name" id="middleName" required>
            </div>
            <div class="form-group">
                <input type="text" name="lastName" placeholder="Last Name" id="lastName" required>
            </div>
            <div class="form-group">
                <input type="text" name="organization" placeholder="Organization" id="organization" required>
            </div>
            <div class="form-group">
                <input type="text" name="email" placeholder="Email" id="email" required>
            </div>
            <div class="form-group">
                <input type="text" name="phoneNumber" placeholder="Mobile Number" id="phoneNumber" required>
            </div>
            <div class="form-group">
                <input type="text" name="address" placeholder="Address" id="address" required>
            </div>
            <div class="form-group">
                <input type="text" name="country" placeholder="Country" id="country" required>
            </div>
            <div class="form-group">
                <input type="text" name="city" placeholder="City" id="city" required>
            </div>
            <div class="form-groupclass="form-group"">
                <input type="text" name="location" placeholder="Location" id="location" required>
            </div>
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" id="username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" id="password" required>
            </div>
            <div class="form-group">
                <input type="submit" value="register">
            </div>
            
        </form>
    </div>
</body>

</html>

======
var express = require('express');
var router = express.Router();
var dbConn = require('../lib/mice_db');
const multer = require('multer');




// display user page
router.get('/', async function (req, res, next) {
    const menuItems = await getMenuItems();
    dbConn.query('SELECT * FROM mice_tbl_hotel ORDER BY hotelId desc', function (err, rows) {
        if (err) {
            req.flash('error', err);
            // render to views/users/index.ejs
            res.render('hotels/hotels', { data: '', title: 'Hotels', menuItems });
        } else {
            // render to views/users/index.ejs
            res.render('hotels/hotels', { data: rows, formatDate, title: 'Hotels', menuItems });
        }
    });
});



// display add user page
router.get('/add', async function (req, res, next) {
    const menuItems = await getMenuItems();
    // render to add.ejs
    res.render('hotels/add_hotel', {
        hotelName: '',
        country: '',
        state: '',
        city: '',
        location: '',
        address: '',
        contactInfo: '',
        description: '',
        ratings: '',
        pic: null,
        title: 'Add hotel', menuItems
    })
})

// Function to format the date
function formatDate(date) {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');
    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
}

function getCurrentDateTime() {
    const now = new Date();
    const year = now.getFullYear();
    const month = String(now.getMonth() + 1).padStart(2, '0');
    const day = String(now.getDate()).padStart(2, '0');
    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    const seconds = String(now.getSeconds()).padStart(2, '0');

    const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
    return formattedDateTime;
}

const maxSize = 1 * 1000 * 1000;
// Set up Multer for handling file uploads
const storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, 'public/uploads/images'); // Specify the directory where uploaded files will be stored
    },
    filename: function (req, file, cb) {
        cb(null, Date.now() + '-' + file.originalname); // Rename the uploaded file
    },
});

const upload = multer({
    storage: storage,
    limits: { fileSize: maxSize },
    ileFilter: function (req, file, cb) {
        var filetypes = /jpeg|jpg|png/;
        var mimetype = filetypes.test(file.mimetype);

        var extname = filetypes.test(path.extname(
            file.originalname).toLowerCase());

        if (mimetype && extname) {
            return cb(null, true);
        }

        cb("Error: File upload only supports the "
            + "following filetypes - " + filetypes);
    }

});

// add a new hotel
router.post('/add', upload.single('image'), async function (req, res, next) {
    const menuItems = await getMenuItems();

    let hotelName = req.body.hotelName;
    let country = req.body.country;
    let state = req.body.state;
    let city = req.body.city;
    let location = req.body.location;
    let address = req.body.address;
    let contactInfo = req.body.contactInfo;
    let description = req.body.description;
    let ratings = req.body.ratings;
    const imageFile = req.file;
    const currentDateTime = getCurrentDateTime();

    let errors = false;

    if (hotelName.length === 0) {
        errors = true;

        // set flash message
        req.flash('error', "Please enter hotel Name");
        // render to add.ejs with flash message
        res.render('hotels/add_hotel', {
            hotelName: hotelName,
            country: country,
            state: state,
            city: city,
            location: location,
            address: address,
            contactInfo: contactInfo,
            description: description,
            ratings: ratings,
            title: 'Add hotel', menuItems
        })
    }

    // if no error
    if (!errors) {

        var form_data = {
            hotelName: hotelName,
            country: country,
            state: state,
            city: city,
            location: location,
            address: address,
            contactInfo: contactInfo,
            description: description,
            ratings: ratings
        }

        // insert query
        dbConn.query('INSERT INTO mice_tbl_hotel SET ?', form_data, function (err, result) {
            //if(err) throw err
            if (err) {
                req.flash('error', err)

                // render to add.ejs
                res.render('hotels/add_hotel', {
                    hotelName: form_data.hotelName,
                    country: form_data.country,
                    state: form_data.state,
                    city: form_data.city,
                    location: form_data.location,
                    address: form_data.address,
                    contactInfo: form_data.contactInfo,
                    description: form_data.description,
                    ratings: form_data.sratingstate,
                    title: 'Add hotel', menuItems
                })
            } else {
                dbConn.query('SELECT * FROM mice_tbl_hotel WHERE  hotelName = ? ', [hotelName], function (err, rows, fields) {
                    if (err) {
                        req.flash('error', err)
                        res.render('hotels/add_hotel', {
                            hotelName: form_data.hotelName,
                            country: form_data.country,
                            state: form_data.state,
                            city: form_data.city,
                            location: form_data.location,
                            address: form_data.address,
                            contactInfo: form_data.contactInfo,
                            description: form_data.description,
                            ratings: form_data.sratingstate,
                            title: 'Add hotel', menuItems
                        });
                    } else {
                        var form_data_image = {
                            imageName: hotelName,
                            hotelId: rows[0].hotelId,
                            imageLink: state,
                            description: 'Hotel Name: ' + hotelName + ', Country: ' + country + ', State: ' + state + ', City' + city + ', Address: ' + address,
                        }
                        dbConn.query('INSERT INTO mice_tbl_images SET ?', form_data_image, function (err, result) {
                            if (err) {
                                req.flash('error', err);

                            } else {
                                req.flash('success', 'Hotel successfully added');
                                res.redirect('/hotels');
                            }
                        })
                    }
                })
                req.flash('success', 'Hotel successfully added');
                res.redirect('/hotels');
            }
        })
    }
})

// display edit user page
router.get('/edit/(:id)', async function (req, res, next) {

    let id = req.params.id;
    const menuItems = await getMenuItems();

    dbConn.query('SELECT * FROM mice_tbl_hotel WHERE hotelId = ' + id, function (err, rows, fields) {
        if (err) throw err

        // if user not found
        if (rows.length <= 0) {
            req.flash('error', 'hotel not found with id = ' + id)
            res.redirect('/hotels')
        }
        // if user found
        else {
            // render to edit.ejs
            res.render('hotels/edit_hotel', {
                title: 'Edit hotel',
                id: rows[0].hotelId,
                hotelName: rows[0].hotelName,
                country: rows[0].country,
                state: rows[0].state,
                city: rows[0].city,
                location: rows[0].location,
                address: rows[0].address,
                contactInfo: rows[0].contactInfo,
                description: rows[0].description,
                ratings: rows[0].ratings,
                title: 'Edit hotel', menuItems
            })
        }
    })
})

// update user data
router.post('/update/:id', async function (req, res, next) {
    const menuItems = await getMenuItems();

    let id = req.params.id;
    let hotelName = req.body.hotelName;
    let country = req.body.country;
    let state = req.body.state;
    let city = req.body.city;
    let location = req.body.location;
    let address = req.body.address;
    let contactInfo = req.body.contactInfo;
    let description = req.body.description;
    let ratings = req.body.ratings;
    const currentDateTime = getCurrentDateTime();
    let errors = false;

    if (hotelName.length === 0 || contactInfo.length === 0) {
        errors = true;

        // set flash message
        req.flash('error', "Please respective data");
        // render to add.ejs with flash message
        res.render('hotels/edit_hotels', {
            hotelId: req.params.id,
            hotelName: hotelName,
            country: country,
            state: state,
            city: city,
            location: location,
            address: address,
            contactInfo: contactInfo,
            description: description,
            ratings: ratings,
            title: 'Edit hotel', menuItems
        })
    }

    // if no error
    if (!errors) {

        var form_data = {
            hotelName: hotelName,
            country: country,
            state: state,
            city: city,
            location: location,
            address: address,
            contactInfo: contactInfo,
            description: description,
            ratings: ratings
        }
        // update query
        dbConn.query('UPDATE mice_tbl_hotel SET ? WHERE hotelId  = ' + id, form_data, function (err, result) {
            //if(err) throw err
            if (err) {
                // set flash message
                req.flash('error', err)
                // render to edit.ejs
                res.render('hotels/edit_hotel', {
                    hotelId: req.params.id,
                    hotelName: form_data.hotelName,
                    country: form_data.country,
                    state: form_data.state,
                    city: form_data.city,
                    location: form_data.location,
                    address: form_data.address,
                    contactInfo: form_data.contactInfo,
                    description: form_data.description,
                    ratings: form_data.ratings,
                    title: 'Edit hotel', menuItems
                })
            } else {
                req.flash('success', 'hotel successfully updated');
                res.redirect('/hotels');
            }
        })
    }
})

// delete user
router.get('/delete/(:id)', function (req, res, next) {

    let id = req.params.id;

    dbConn.query('DELETE FROM mice_tbl_hotel WHERE hotelId = ' + id, function (err, result) {
        //if(err) throw err
        if (err) {
            // set flash message
            req.flash('error', err)
            // redirect to user page
            res.redirect('/hotels')
        } else {
            // set flash message
            req.flash('success', 'hotel successfully deleted! ID = ' + id)
            // redirect to user page
            res.redirect('/hotels')
        }
    })
})

const getMenuItems = () => {
    return new Promise((resolve, reject) => {
        const query = 'SELECT * FROM mice_tbl_menu_items ORDER BY id ASC';
        dbConn.query(query, (err, results) => {
            if (err) {
                reject(err);
            } else {
                resolve(results);
            }
        });
    });
};

module.exports = router;
-----

   const { fieldname, originalname, encoding, mimetype, destination, filename, path, size } = req.file;
                            var form_data_image = {
                                imageOwner: hotelName,
                                hotelId: rows[0].hotelId,
                                path: path,
                                description: 'Hotel Name: ' + hotelName + ', Country: ' + country + ', State: ' + state + ', City' + city + ', Address: ' + address,
                                fieldname: fieldname,
                                originalname: originalname,
                                encoding: encoding,
                                mimetype: mimetype,
                                destination: destination,
                                filename: filename,
                                size: size
                            }

                            SIDE PANEL LAYOUT

                            <!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>
    <%= title %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
</head>

<body data-template="thread_view">
  <header>
    <!-- Header content goes here -->
  </header>
  <div class="container">
    
    <aside class="collapsed" id="sidebar">
      <button id="sidebar-toggle">☰</button>
      <nav>
        <ul>
          <% function generateMenu(items, parentId) { %>
            <% items.forEach(item=> { %>
              <% if (item.parent_id===parentId) { %>
                <li class="dropdown-btn">
                  <a href="<%= item.link %>">
                    <%= item.label %>
                  </a>
                  <ul class="dropdown-content">
                    <% generateMenu(items, item.id) %>
                  </ul>
                </li>
                <% } %>
                  <% }); %>
                    <% } %>
                      <% generateMenu(menuItems, 0); %>
        </ul>
      </nav>
    </aside>
    <div class="page-content">

    </div>
  </div>
  <script>
    var dropdown = document.getElementsByClassName("dropdown-btn");
    var i;

    for (i = 0; i < dropdown.length; i++) {
      dropdown[i].addEventListener("click", function () {
        this.classList.toggle("active");
        var dropdownContent = this.querySelector(".dropdown-content");
        if (dropdownContent.style.maxHeight) {
          dropdownContent.style.maxHeight = null;
        } else {
          dropdownContent.style.maxHeight = dropdownContent.scrollHeight + "px";
        }
      });
    }

    function toggleSidebar() {
      const sidebar = document.querySelector('aside');
      sidebar.classList.toggle('collapsed');
    }

    const sidebarToggleBtn = document.getElementById('sidebar-toggle');
    sidebarToggleBtn.addEventListener('click', toggleSidebar);

    const pageContent = document.querySelector('.page-content');
    pageContent.addEventListener('click', function () {
      const sidebar = document.querySelector('#sidebar');
      if (!sidebar.classList.contains('collapsed')) {
        toggleSidebar();
      }
    });

    // Prevent clicks inside the sidebar from closing it.
    const sidebar = document.querySelector('#sidebar');
    sidebar.addEventListener('click', function (event) {
      event.stopPropagation();
    });


  </script>
</body>

</html>

---------------------------------------------------------------------
<div id="image-links">
            <!-- Add your five image links here -->
            <a href="/"><img src="link1.jpg" alt="Link 1"></a>
            <a href="/"><img src="link2.jpg" alt="Link 2"></a>

        </div>

        <div id="image-links">
            <!-- Add your five image links here -->
            <a href="/"><img src="link1.jpg" alt="Link 1"></a>
            <a href="/"><img src="link2.jpg" alt="Link 2"></a>

        </div> 

 <div id="slideshow">
            <!-- Add your sliding images here -->
            <img src="/images/mice_lllogo.png" alt="Image 1" loading="lazy">
            <img src="/images/image_pic1.png" alt="Image 2">
            <img src="/images/mice_icon2.png" alt="Image 3">
            <img src="/images/mic_image_pic2.png" alt="Image 3">
            <img src="/images/mice_back_logo2.png" alt="Image 3">
            <img src="/images/MICE_llogo.png" alt="Image 3">
        </div>


====================

<script>
        $(document).ready(function () {
            // Add your JavaScript code here if needed
            let slideIndex = 0;
            var cardSlideIndex = 0;
            var cardSlideIndex2 = 0;
            showSlides();
            showCardSlides();
            showCard2Slides();
    
            function showSlides() {
                let i;
                let slides = document.getElementsByClassName("mySlides");
                let dots = document.getElementsByClassName("dot");
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";
                }
                slideIndex++;
                if (slideIndex > slides.length) { slideIndex = 1 }
                for (i = 0; i < dots.length; i++) {
                    dots[i].className = dots[i].className.replace(" active", "");
                }
                slides[slideIndex - 1].style.display = "block";
                dots[slideIndex - 1].className += " active";
                setTimeout(showSlides, 5000); // Change image every 5 seconds
            }
    
            function showCardSlides() {
                var i;
                var slides = $(".image-slider img");
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";
                }
                cardSlideIndex++;
                if (cardSlideIndex > slides.length) {
                    cardSlideIndex = 1;
                }
                slides[cardSlideIndex - 1].style.display = "block";
                setTimeout(showCardSlides, 2000); // Change image every 2 seconds
            }

            function showCard2Slides() {
                var i;
                var slides = $(".image-slider1 img");
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";
                }
                cardSlideIndex2++;
                if (cardSlideIndex2 > slides.length) {
                    cardSlideIndex2 = 1;
                }
                slides[cardSlideIndex2 - 1].style.display = "block";
                setTimeout(showCardSlides, 2000); // Change image every 2 seconds
            }

            function showCard3Slides() {
                var i;
                var slides = $(".image-slider img");
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";
                }
                cardSlideIndex++;
                if (cardSlideIndex > slides.length) {
                    cardSlideIndex = 1;
                }
                slides[cardSlideIndex - 1].style.display = "block";
                setTimeout(showCardSlides, 2000); // Change image every 2 seconds
            }
        });
    </script>

    --------------------------------------------------------------------------------------------------------------
    VERY IMPORTANT PART 

    INDEX.EJS

    <%- include('pages/layout_main') %>
   

        <!-- Clarity Section -->
        <div class="containers" style="background-color:#f1f1f1; display: flex;">
            <div class="column-40">
                <img src="/images/image11.png" alt="App" width="335" height="971">
            </div>
            <div class="column-67">
                <h1 class="xlarge-font" style="color:rgba(255, 77, 0, 0.89);"><b>About Us.</b></h1>
                <!-- <h1 class="large-font" style="color:rgba(255, 77, 0, 0.89);"><b>About Us.</b></h1> -->
                <p><span style="font-size:24px">One Solid Link</span> is a leading company in the Meetings, Incentives,
                    Conferences & Events (MICE) sector.
                    We specialize in providing comprehensive solutions for event planning and booking, catering to the
                    unique needs of organization like yours
                </p>
                <!-- <button class="button" style="background-color:red">Read More</button> -->
            </div>
        </div>

        <div class="containertop" style="display: flex;">
            
                <!-- Section 1 -->
                <div class="column-33">
                    <div class="card">
                        <!-- <h1 class="xlarge-font"><b>The App</b></h1> -->
                        <h1 class="large-font" style="color: rgb(246, 118, 33);"><b>Venue Selection:</b></h1>
                        <p>



                        </p>
                        <!-- <button class="button">Download Application</button> -->
                    </div>
                </div>
                <!-- Section 2 -->
                <div class="column-33">
                    <div class="card">
                        <!-- Content for section 2 goes here -->
                        <p>Finding the perfect venue can make a significant difference in the success of your event.
                            We leverage our extensive network and expertise to identify venues that align with your
                            vision,
                            budget, and logistical needs. Our goal is to provide you with a curated list of options that
                            meet your criteria,
                            saving you time and effort.</p>
                    </div>
                </div>
                <!-- Section 3 -->
                <div class="column-33">
                    <div class="card">
                        <!-- Content for section 3 goes here -->
                        <!-- <img src="/images/mice_bg_3.png" width="335" height="471"> -->
                        <div class="image-slider">
                            <img src="/images/mice_events/image1.jpg" alt="Image 1">
                            <img src="/images/mice_events/image2.jpg" alt="Image 2">
                            <img src="/images/mice_events/image3.jpg" alt="Image 3">
                        </div>
                    </div>
                </div>
            
        </div>

        <div class="containermid" style="display: flex;">
            
                <!-- Section 1 -->
                <div class="column-33">
                    <div class="card">
                        <!-- <h1 class="xlarge-font"><b>The App</b></h1> -->
                        <h1 class="large-font" style="color: rgb(246, 118, 33);"><b>Accomodation Management:</b></h1>
                        <!-- <button class="button">Download Application</button> -->
                    </div>
                </div>
                <!-- Section 2 -->
                <div class="column-33">
                    <div class="card">
                        <!-- Content for section 2 goes here -->
                        <p>We handle all your accomodation requirements, which include securing special rates and
                            overseeing
                            room allocations for your event participants.</p>
                    </div>
                </div>
                <!-- Section 3 -->
                <div class="column-33">
                    <div class="card">
                        <!-- Content for section 3 goes here -->
                        <!-- <img src="/images/mice_bg_3.png" width="335" height="471"> -->
                        <div class="image-sliderr">
                            <img src="/images/mice_events/hotel1.jpeg" alt="Image 1">
                            <img src="/images/mice_events/hotel2.jpeg" alt="Image 2">
                            <img src="/images/mice_events/hotel3.jpeg" alt="Image 3">
                            <img src="/images/mice_events/IMG-20231005-WA0025.jpg" alt="Image 4">
                        </div>
                    </div>
                </div>
            
        </div>

        <div class="containermidd" style="display: flex;">
            
                <!-- Section 1 -->
                <div class="column-33">
                    <div class="card">
                        <!-- <h1 class="xlarge-font"><b>The App</b></h1> -->
                        <h1 class="large-font" style="color: rgb(246, 118, 33);"><b>Ancillary Services:</b></h1>
                        <!-- <button class="button">Download Application</button> -->
                    </div>
                </div>
                <!-- Section 2 -->
                <div class="column-33">
                    <div class="card">
                        <!-- Content for section 2 goes here -->
                        <p>These include transportation arrangements, catering coodination, audiovisual support, and
                            more.
                        </p>
                    </div>
                </div>
                <!-- Section 3 -->
                <div class="column-33">
                    <div class="card">
                        <!-- Content for section 3 goes here -->
                        <!-- <img src="/images/mice_bg_3.png" width="335" height="471"> -->
                        <div class="image-sliderrr">
                            <img src="/images/mice_events/IMG-20231005-WA0021.jpg" alt="Image 1">
                            <img src="/images/mice_events/IMG-20231005-WA0022.jpg" alt="Image 2">
                            <img src="/images/mice_events/IMG-20231005-WA0023.jpg" alt="Image 3">
                            <img src="/images/mice_events/IMG-20231005-WA0024.jpg" alt="Image 4">
                        </div>
                    </div>
                </div>
           
        </div>

        <!-- The App Section -->
        <div class="container">

            <div class="column-67">
                <h1 class="xlarge-font"><b></b></h1>
                <h1 class="large-font" style="color:MediumSeaGreen;"><b>Why choose us?</b></h1>
                <p><span style="font-size:36px">At One Solid Link,</span> our commitment to excellence, innovation, and
                    customer satisfaction drives everything we do. We pride ourselves on being a reliable partner that
                    understands your unique needs and delivers tailored solutions that exceed your expectations. With
                    our
                    assistance, you can elevate your meetings into impactful and memorable experiences that foster
                    collaboration and growth.

                    We would be delighted to discuss how One Solid Link can support your organization's meeting planning
                    and
                    venue selection needs. Please feel free to reach out to schedule a conversation at your convenience.
                    We
                    look forward to the opportunity to collaborate and contribute to your success.

                    Thank you for considering One Solid Link. Together, let's transform your meetings into remarkable
                    occasions.
                </p>
                <!-- <button class="button">Download Application</button> -->
            </div>
            <div class="column-34">
                <!-- <img src="/images/image11.png" alt="App" width="335" height="471"> -->
            </div>

        </div>


    <%- include('pages/footer') %>
    --------------------------------------------------------------------------------------------------------------